/* SPDX-License-Identifier: MIT */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: default_transform {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows    = < 4>;
		// | f3 | e1 | d1 | c1 | b1 | a1 |              | a1 | b1 | c1 | d1 | e1 | f3 |
		// | f1 | e2 | d2 | c2 | b2 | a2 | a4 |    | a4 | a2 | b2 | c2 | d2 | e2 | f1 |
		// | f2 | e3 | d3 | c3 | b3 | a3 | b4 |    | b4 | a3 | b3 | c3 | d3 | e3 | f2 |
		//           | f4 |    | e4 | d4 | c4 |    | c4 | d4 | e4 |    | f4 |          
		map = <
			RC(2,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                    RC(0,6) RC(0, 7) RC(0,8) RC(0, 9) RC(0,10) RC(2,11)
			RC(0,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(3,5)    RC(3,6) RC(1,6) RC(1, 7) RC(1,8) RC(1, 9) RC(1,10) RC(0,11)
			RC(1,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(3,4)    RC(3,7) RC(2,6) RC(2, 7) RC(2,8) RC(2, 9) RC(2,10) RC(1,11)
			                RC(3,0)         RC(3,1) RC(3,2) RC(3,3)    RC(3,8) RC(3,9) RC(3,10)         RC(3,11)                  
		>;
	};

	split_3x5_3_transform: split3x5_3_transform {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows    = < 4>;
		// | e1 | d1 | c1 | b1 | a1 |    | a1 | b1 | c1 | d1 | e1 |
		// | e2 | d2 | c2 | b2 | a2 |    | a2 | b2 | c2 | d2 | e2 |
		// | e3 | d3 | c3 | b3 | a3 |    | a3 | b3 | c3 | d3 | e3 |
		//           | e4 | d4 | c4 |    | c4 | d4 | e4 |          
		map = <
			RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)    RC(0,6) RC(0, 7) RC(0,8) RC(0, 9) RC(0,10)
			RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)    RC(1,6) RC(1, 7) RC(1,8) RC(1, 9) RC(1,10)
			RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)    RC(2,6) RC(2, 7) RC(2,8) RC(2, 9) RC(2,10)
			                RC(3,1) RC(3,2) RC(3,3)    RC(3,8) RC(3,9) RC(3,10)                  
		>;
	};

	split_3x6_3_transform: split3x6_3_transform {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows    = < 4>;
		// | f3 | e1 | d1 | c1 | b1 | a1 |    | a1 | b1 | c1 | d1 | e1 | f3 |
		// | f1 | e2 | d2 | c2 | b2 | a2 |    | a2 | b2 | c2 | d2 | e2 | f1 |
		// | f2 | e3 | d3 | c3 | b3 | a3 |    | a3 | b3 | c3 | d3 | e3 | f2 |
		//                | e4 | d4 | c4 |    | c4 | d4 | e4 |               
		map = <
			RC(2,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)    RC(0,6) RC(0, 7) RC(0,8) RC(0, 9) RC(0,10) RC(2,11)
			RC(0,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)    RC(1,6) RC(1, 7) RC(1,8) RC(1, 9) RC(1,10) RC(0,11)
			RC(1,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)    RC(2,6) RC(2, 7) RC(2,8) RC(2, 9) RC(2,10) RC(1,11)
			                        RC(3,1) RC(3,2) RC(3,3)    RC(3,8) RC(3,9) RC(3,10)                           
		>;
	};

	ortho_4x12_transform: ortho4x12_transform {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows    = < 4>;
		// | f3 | e1 | d1 | c1 | b1 | a1 || a1 | b1 | c1 | d1 | e1 | f3 |
		// | f1 | e2 | d2 | c2 | b2 | a2 || a2 | b2 | c2 | d2 | e2 | f1 |
		// | f2 | e3 | d3 | c3 | b3 | a3 || a3 | b3 | c3 | d3 | e3 | f2 |
		// | a4 | b4 | f4 | e4 | d4 | c4 || c4 | d4 | e4 | f4 | b4 | a4 |
		map = <
			RC(2,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0, 8) RC(0, 9) RC(0,10) RC(2,11)
			RC(0,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1, 8) RC(1, 9) RC(1,10) RC(0,11)
			RC(1,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2, 8) RC(2, 9) RC(2,10) RC(1,11)
			RC(3,5) RC(3,4) RC(3,0) RC(3,1) RC(3,2) RC(3,3)  RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3, 7) RC(3, 6)
		>;
	};

	ichnite_transform: ichnite_transform {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows    = < 4>;
		// | e1 | d1 | c1 | b1 | a1 |              | a1 | b1 | c1 | d1 | e1 |
		// | e2 | d2 | c2 | b2 | a2 | a4 |    | a4 | a2 | b2 | c2 | d2 | e2 |
		// | e3 | d3 | c3 | b3 | a3 | b4 |    | b4 | a3 | b3 | c3 | d3 | e3 |
		//                | e4 | d4 | c4 |    | c4 | d4 | e4 |               
		map = <
			RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                    RC(0,6) RC(0, 7) RC(0,8) RC(0, 9) RC(0,10)
			RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(3,5)    RC(3,6) RC(1,6) RC(1, 7) RC(1,8) RC(1, 9) RC(1,10)
			RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(3,4)    RC(3,7) RC(2,6) RC(2, 7) RC(2,8) RC(2, 9) RC(2,10)
			                        RC(3,1) RC(3,2) RC(3,3)    RC(3,8) RC(3,9) RC(3,10)                          
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";

		diode-direction = "col2row";
		row-gpios
			= <&pro_micro_d 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&pro_micro_d 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&pro_micro_d 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&pro_micro_a  9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};
};
